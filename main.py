import timeit


def insertion_sort(lst):
    for i in range(1, len(lst)):
        key = lst[i]
        j = i - 1
        while j >= 0 and key < lst[j]:
            lst[j + 1] = lst[j]
            j -= 1
        lst[j + 1] = key
    return lst


def merge_sort(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    left_half = arr[:mid]
    right_half = arr[mid:]

    return merge(merge_sort(left_half), merge_sort(right_half))


def merge(left, right):
    merged = []
    left_index = 0
    right_index = 0

    while left_index < len(left) and right_index < len(right):
        if left[left_index] <= right[right_index]:
            merged.append(left[left_index])
            left_index += 1
        else:
            merged.append(right[right_index])
            right_index += 1

    while left_index < len(left):
        merged.append(left[left_index])
        left_index += 1

    while right_index < len(right):
        merged.append(right[right_index])
        right_index += 1

    return merged


test1_data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
              30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
              56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
              82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]


def test1_merge():
    merge_sort(test1_data)


def test1_insertion():
    insertion_sort(test1_data)


def test1_tim():
    sorted(test1_data)


test2_data = [100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75,
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49,
              48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23,
              22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]


def test2_merge():
    merge_sort(test2_data)


def test2_insertion():
    insertion_sort(test2_data)


def test2_tim():
    sorted(test2_data)


test3_data = [78, 55, 99, 48, 54, 31, 49, 16, 89, 90, 87, 44, 2, 9, 97, 60, 94, 41, 18, 27, 74, 32, 65, 23, 76, 98, 84,
              59, 53, 66, 11, 75, 40, 77, 43, 88, 70, 56, 100, 22, 13, 96, 69, 5, 4, 37, 28, 24, 26, 57, 50, 71, 36, 7,
              82, 58, 80, 67, 45, 17, 21, 38, 95, 34, 6, 20, 51, 64, 79, 8, 62, 33, 61, 52, 1, 83, 10, 39, 47, 42, 35,
              68, 81, 14, 92, 19, 25, 15, 30, 72, 46, 12, 73, 86, 63, 85, 91, 29, 93, 3]


def test3_merge():
    merge_sort(test3_data)


def test3_insertion():
    insertion_sort(test3_data)


def test3_tim():
    sorted(test3_data)


test4_data = [367, 525, 175, 736, 371, 1, 528, 552, 607, 39, 278, 951, 549, 667, 891, 287, 4, 490, 960, 254, 70, 483,
              66, 703, 87, 905, 769, 174, 714, 638, 226, 503, 755, 500, 539, 333, 344, 974, 625, 103, 530, 111, 154,
              880, 923, 338, 661, 529, 752, 433, 830, 687, 335, 395, 180, 343, 578, 242, 150, 688, 347, 889, 290, 379,
              944, 148, 270, 767, 424, 470, 105, 675, 602, 737, 354, 264, 777, 475, 484, 587, 665, 393, 536, 212, 637,
              842, 241, 156, 438, 518, 316, 214, 97, 958, 374, 803, 279, 168, 346, 867, 300, 930, 655, 269, 832, 784,
              745, 73, 223, 877, 137, 81, 507, 715, 619, 520, 411, 646, 881, 754, 285, 558, 20, 939, 639, 593, 200, 949,
              445, 540, 695, 377, 502, 971, 978, 408, 794, 984, 450, 903, 207, 669, 441, 790, 332, 534, 355, 14, 17,
              533, 130, 245, 409, 884, 860, 747, 310, 399, 864, 684, 155, 187, 457, 243, 545, 340, 491, 795, 313, 304,
              349, 267, 515, 623, 69, 928, 609, 588, 446, 899, 383, 896, 100, 781, 890, 671, 177, 685, 618, 856, 579,
              693, 735, 541, 449, 812, 995, 358, 176, 734, 626, 717, 791, 649, 577, 760, 716, 410, 145, 256, 498, 119,
              128, 815, 360, 259, 861, 122, 787, 698, 648, 151, 420, 952, 874, 323, 608, 559, 467, 920, 517, 312, 839,
              136, 261, 436, 492, 975, 6, 845, 76, 248, 537, 932, 967, 237, 55, 635, 369, 247, 10, 15, 472, 765, 827,
              882, 982, 954, 953, 912, 780, 258, 808, 758, 167, 59, 789, 486, 271, 915, 331, 384, 865, 771, 464, 30,
              872, 726, 936, 980, 516, 413, 599, 854, 314, 289, 293, 909, 182, 718, 742, 171, 94, 499, 282, 188, 990,
              707, 711, 976, 636, 405, 929, 797, 359, 286, 702, 439, 708, 337, 2, 996, 143, 402, 600, 699, 562, 557,
              863, 401, 743, 605, 788, 284, 18, 597, 859, 113, 835, 809, 403, 746, 116, 326, 219, 191, 206, 883, 933,
              778, 169, 24, 185, 935, 858, 601, 824, 485, 11, 983, 666, 23, 250, 594, 397, 616, 514, 50, 431, 926, 997,
              664, 327, 112, 40, 732, 612, 380, 696, 21, 296, 733, 621, 44, 460, 342, 378, 324, 739, 126, 504, 583, 898,
              162, 524, 674, 497, 934, 215, 921, 95, 79, 955, 814, 53, 322, 417, 301, 900, 969, 317, 204, 297, 109, 233,
              878, 700, 813, 462, 133, 988, 434, 7, 522, 979, 505, 246, 370, 423, 916, 652, 139, 351, 965, 368, 727,
              764, 546, 461, 962, 946, 91, 444, 345, 96, 390, 796, 140, 381, 227, 508, 580, 421, 992, 725, 972, 179,
              894, 363, 509, 575, 721, 478, 74, 12, 253, 77, 396, 556, 761, 476, 800, 595, 49, 817, 118, 466, 722, 163,
              852, 141, 366, 799, 542, 56, 806, 31, 281, 686, 37, 866, 680, 220, 840, 724, 244, 400, 561, 45, 231, 906,
              957, 617, 251, 841, 950, 240, 701, 804, 43, 606, 811, 678, 657, 32, 712, 305, 375, 298, 596, 9, 553, 147,
              232, 977, 273, 643, 142, 768, 102, 189, 319, 86, 833, 989, 456, 526, 46, 468, 428, 773, 146, 821, 494, 72,
              510, 704, 121, 134, 511, 442, 67, 82, 731, 634, 738, 196, 203, 235, 629, 831, 620, 757, 902, 873, 535,
              496, 706, 64, 127, 550, 748, 356, 412, 560, 924, 165, 78, 677, 80, 16, 352, 943, 334, 719, 759, 582, 303,
              868, 513, 114, 482, 288, 653, 622, 563, 71, 181, 455, 453, 228, 75, 173, 774, 208, 886, 834, 770, 641,
              538, 197, 216, 432, 157, 302, 802, 828, 614, 598, 604, 52, 495, 798, 415, 829, 656, 913, 198, 68, 120,
              837, 266, 218, 125, 477, 430, 844, 440, 569, 426, 480, 876, 848, 330, 292, 642, 268, 459, 853, 855, 938,
              999, 857, 493, 991, 386, 862, 567, 571, 565, 586, 13, 385, 85, 42, 161, 236, 869, 668, 647, 329, 159, 230,
              124, 474, 321, 592, 826, 201, 584, 29, 590, 589, 435, 83, 555, 320, 93, 57, 123, 786, 419, 917, 427, 194,
              158, 280, 585, 640, 964, 654, 751, 772, 591, 818, 306, 897, 987, 257, 572, 879, 178, 364, 89, 443, 532,
              631, 425, 998, 389, 551, 547, 110, 756, 662, 948, 709, 566, 782, 893, 766, 966, 658, 135, 51, 249, 816,
              357, 152, 820, 644, 763, 521, 973, 387, 25, 172, 807, 325, 348, 705, 544, 713, 956, 888, 195, 611, 922,
              217, 683, 838, 92, 164, 27, 48, 315, 672, 548, 851, 414, 651, 170, 823, 624, 730, 615, 193, 887, 543, 234,
              610, 209, 28, 190, 265, 117, 350, 959, 260, 728, 255, 506, 328, 785, 47, 892, 406, 501, 192, 160, 62, 801,
              875, 199, 373, 19, 294, 463, 581, 632, 388, 489, 847, 963, 919, 131, 222, 429, 183, 783, 749, 41, 5, 376,
              843, 945, 697, 568, 275, 993, 35, 138, 723, 741, 947, 691, 469, 101, 202, 238, 108, 479, 458, 885, 488,
              106, 573, 850, 931, 940, 481, 225, 694, 870, 166, 570, 981, 871, 398, 224, 810, 937, 186, 911, 361, 681,
              153, 392, 779, 277, 512, 942, 819, 272, 660, 239, 527, 353, 613, 531, 309, 663, 627, 88, 362, 775, 805,
              904, 659, 710, 650, 673, 750, 283, 311, 822, 211, 645, 341, 825, 372, 762, 422, 744, 416, 451, 262, 61,
              307, 22, 986, 418, 901, 961, 633, 407, 720, 252, 54, 574, 229, 382, 115, 753, 8, 144, 628, 213, 836, 740,
              471, 336, 210, 291, 564, 576, 205, 274, 65, 679, 221, 34, 670, 299, 689, 918, 907, 448, 465, 276, 968, 58,
              910, 26, 107, 994, 391, 776, 63, 849, 630, 985, 729, 676, 519, 99, 339, 104, 394, 970, 184, 454, 603, 129,
              90, 692, 452, 941, 84, 846, 308, 295, 914, 98, 33, 149, 38, 793, 60, 132, 437, 690, 682, 908, 263, 792,
              36, 927, 895, 447, 365, 554, 523, 487, 925, 473, 318, 404, 3]


def test4_merge():
    merge_sort(test4_data)


def test4_insertion():
    insertion_sort(test4_data)


def test4_tim():
    sorted(test4_data)


def do_test(name: str):
    print(f"Test for {name}")
    for sort_type in ["merge", "insertion", "tim"]:
        timeit_report = timeit.timeit(f"{name}_{sort_type}()",
                                      number=10000,
                                      setup=f"from __main__ import {name}_{sort_type}"
                                      )
        print('\ttype:{:<10s} result:{:.4f}'.format(sort_type, timeit_report))


def main():
    do_test("test1")
    do_test("test2")
    do_test("test3")
    do_test("test4")


if __name__ == '__main__':
    main()
